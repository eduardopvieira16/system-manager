package br.com.vieira.srv.manager.service.impl;

import java.util.List;
import java.util.stream.Collectors;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import br.com.vieira.srv.manager.dto.InventoryDTO;
import br.com.vieira.srv.manager.exception.ResourceNotFoundException;
import br.com.vieira.srv.manager.model.Inventory;
import br.com.vieira.srv.manager.model.Product;
import br.com.vieira.srv.manager.repository.InventoryRepository;
import br.com.vieira.srv.manager.repository.ProductRepository;
import br.com.vieira.srv.manager.service.InventoryService;

@Service
public class InventoryServiceImpl implements InventoryService {

	@Autowired
	private InventoryRepository inventoryRepository;

	@Autowired
	private ProductRepository productRepository;

	@Override
	public List<InventoryDTO> findAll() {
		return inventoryRepository.findAll().stream().map(this::toDTO).collect(Collectors.toList());
	}

	@Override
	public InventoryDTO findById(Long id) {
		Inventory inventory = inventoryRepository.findById(id)
				.orElseThrow(() -> new ResourceNotFoundException("Movimentação não encontrada"));
		return toDTO(inventory);
	}

	@Override
	public InventoryDTO createInventory(InventoryDTO inventoryDTO) {
		Product product = productRepository.findById(inventoryDTO.getProductId())
				.orElseThrow(() -> new ResourceNotFoundException("Produto não encontrado"));
		Inventory inventory = new Inventory();
		inventory.setProduct(product);
		inventory.setQuantity(inventoryDTO.getQuantity());
		inventory.setMovementType(inventoryDTO.getMovementType());
		inventory.setMovementDate(inventoryDTO.getMovementDate());
		inventory = inventoryRepository.save(inventory);
		return toDTO(inventory);
	}

	private InventoryDTO toDTO(Inventory inventory) {
		InventoryDTO dto = new InventoryDTO();
		dto.setId(inventory.getId());
		dto.setProductId(inventory.getProduct().getId());
		dto.setQuantity(inventory.getQuantity());
		dto.setMovementType(inventory.getMovementType());
		dto.setMovementDate(inventory.getMovementDate());
		return dto;
	}
}